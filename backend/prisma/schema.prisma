generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                    Int             @id @default(autoincrement())
  firstName             String
  lastName              String
  email                 String          @unique
  password              String
  role                  Role
  createdCourses        Course[]
  coTutors              CoTutor[]
  sentNotifications     Notifications[] @relation("FromUser")
  receivedNotifications Notifications[] @relation("ToUser")
  uploadedLectures      Lecture[]
}

model Course {
  id           Int             @id @default(autoincrement())
  title        String
  description  String          @db.Text
  thumbnail    String?         @default("")
  tutorId      Int
  tutor        User            @relation(fields: [tutorId], references: [id])
  price        Int?            @default(0)
  category     String?
  status       Status?         @default(unpublished)
  coTutors     CoTutor[]
  sentRequests Notifications[]
  Lecture      Lecture[]
}

model CoTutor {
  id          Int          @id @default(autoincrement())
  courseId    Int
  course      Course       @relation(fields: [courseId], references: [id])
  tutorId     Int
  tutor       User         @relation(fields: [tutorId], references: [id])
  permissions Permission[]
}

model Notifications {
  id           Int          @id @default(autoincrement())
  fromId       Int
  fromUser     User         @relation("FromUser", fields: [fromId], references: [id])
  toId         Int
  toUser       User         @relation("ToUser", fields: [toId], references: [id])
  notification Notification
  courseId     Int
  course       Course       @relation(fields: [courseId], references: [id])
}

model Lecture {
  id       Int    @id @default(autoincrement())
  tutorId  Int
  courseId Int
  title    String
  course   Course @relation(fields: [courseId], references: [id])
  tutor    User   @relation(fields: [tutorId], references: [id])
}

enum Role {
  student
  tutor
}

enum Status {
  published
  unpublished
}

enum Permission {
  edit
  add
  status
}

enum Notification {
  request
  accepted
}
